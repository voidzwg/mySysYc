INTTK int 5
IDENFR ccc 5
SEMICN ; 5
INTTK int 7
MAINTK main 7
LPARENT ( 7
RPARENT ) 7
LBRACE { 7
SEMICN ; 9
CONSTTK const 10
INTTK int 10
IDENFR ccc 10
ASSIGN = 10
INTCON 0 10
SEMICN ; 10
PRINTFTK printf 11
LPARENT ( 11
STRCON "20373227\n" 11
RPARENT ) 11
SEMICN ; 11
INTTK int 12
IDENFR a 12
COMMA , 12
IDENFR b 12
COMMA , 12
IDENFR c 12
COMMA , 12
IDENFR d 12
SEMICN ; 12
PRINTFTK printf 13
LPARENT ( 13
STRCON "please input a\n" 13
RPARENT ) 13
SEMICN ; 13
IDENFR a 14
ASSIGN = 14
GETINTTK getint 14
LPARENT ( 14
RPARENT ) 14
SEMICN ; 14
PRINTFTK printf 15
LPARENT ( 15
STRCON "please input b\n" 15
RPARENT ) 15
SEMICN ; 15
IDENFR b 16
ASSIGN = 16
GETINTTK getint 16
LPARENT ( 16
RPARENT ) 16
SEMICN ; 16
PRINTFTK printf 17
LPARENT ( 17
STRCON "please input c\n" 17
RPARENT ) 17
SEMICN ; 17
IDENFR c 18
ASSIGN = 18
GETINTTK getint 18
LPARENT ( 18
RPARENT ) 18
SEMICN ; 18
PRINTFTK printf 19
LPARENT ( 19
STRCON "please input d\n" 19
RPARENT ) 19
SEMICN ; 19
IDENFR d 20
ASSIGN = 20
GETINTTK getint 20
LPARENT ( 20
RPARENT ) 20
SEMICN ; 20
PRINTFTK printf 21
LPARENT ( 21
STRCON "a = %d, b = %d, c = %d, d = %d\n" 21
COMMA , 21
IDENFR a 21
COMMA , 21
IDENFR b 21
COMMA , 21
IDENFR c 21
COMMA , 21
IDENFR d 21
RPARENT ) 21
SEMICN ; 21
INTTK int 22
IDENFR array_a 22
LBRACK [ 22
INTCON 2 22
RBRACK ] 22
LBRACK [ 22
INTCON 2 22
RBRACK ] 22
ASSIGN = 22
LBRACE { 22
LBRACE { 22
IDENFR a 22
COMMA , 22
IDENFR b 22
RBRACE } 22
COMMA , 22
LBRACE { 22
IDENFR c 22
COMMA , 22
IDENFR d 22
RBRACE } 22
RBRACE } 22
SEMICN ; 22
IFTK if 23
LPARENT ( 23
IDENFR array_a 23
LBRACK [ 23
INTCON 0 23
RBRACK ] 23
LBRACK [ 23
INTCON 0 23
RBRACK ] 23
GEQ >= 23
IDENFR array_a 23
LBRACK [ 23
INTCON 0 23
RBRACK ] 23
LBRACK [ 23
INTCON 1 23
RBRACK ] 23
AND && 23
IDENFR array_a 23
LBRACK [ 23
INTCON 0 23
RBRACK ] 23
LBRACK [ 23
INTCON 0 23
RBRACK ] 23
GEQ >= 23
IDENFR array_a 23
LBRACK [ 23
INTCON 1 23
RBRACK ] 23
LBRACK [ 23
INTCON 0 23
RBRACK ] 23
OR || 23
IDENFR array_a 23
LBRACK [ 23
INTCON 1 23
RBRACK ] 23
LBRACK [ 23
INTCON 1 23
RBRACK ] 23
LSS < 23
IDENFR array_a 23
LBRACK [ 23
INTCON 1 23
RBRACK ] 23
LBRACK [ 23
INTCON 0 23
RBRACK ] 23
OR || 23
IDENFR array_a 23
LBRACK [ 23
INTCON 1 23
RBRACK ] 23
LBRACK [ 23
INTCON 1 23
RBRACK ] 23
LSS < 23
IDENFR array_a 23
LBRACK [ 23
INTCON 0 23
RBRACK ] 23
LBRACK [ 23
INTCON 1 23
RBRACK ] 23
AND && 23
NOT ! 23
IDENFR array_a 23
LBRACK [ 23
INTCON 0 23
RBRACK ] 23
LBRACK [ 23
INTCON 0 23
RBRACK ] 23
RPARENT ) 23
LBRACE { 23
PRINTFTK printf 24
LPARENT ( 24
STRCON "Hello, and\n" 24
RPARENT ) 24
SEMICN ; 24
RBRACE } 25
ELSETK else 26
LBRACE { 26
PRINTFTK printf 27
LPARENT ( 27
STRCON "Hello, or\n" 27
RPARENT ) 27
SEMICN ; 27
RBRACE } 28
LBRACE { 29
RBRACE } 29
RETURNTK return 31
INTCON 0 31
SEMICN ; 31
RBRACE } 32
