INTTK int
IDENFR ccc
SEMICN ;
INTTK int
MAINTK main
LPARENT (
RPARENT )
LBRACE {
SEMICN ;
CONSTTK const
INTTK int
IDENFR ccc
ASSIGN =
INTCON 0
SEMICN ;
PRINTFTK printf
LPARENT (
STRCON "20373227\n"
RPARENT )
SEMICN ;
INTTK int
IDENFR a
COMMA ,
IDENFR b
COMMA ,
IDENFR c
COMMA ,
IDENFR d
SEMICN ;
PRINTFTK printf
LPARENT (
STRCON "please input a\n"
RPARENT )
SEMICN ;
IDENFR a
ASSIGN =
GETINTTK getint
LPARENT (
RPARENT )
SEMICN ;
PRINTFTK printf
LPARENT (
STRCON "please input b\n"
RPARENT )
SEMICN ;
IDENFR b
ASSIGN =
GETINTTK getint
LPARENT (
RPARENT )
SEMICN ;
PRINTFTK printf
LPARENT (
STRCON "please input c\n"
RPARENT )
SEMICN ;
IDENFR c
ASSIGN =
GETINTTK getint
LPARENT (
RPARENT )
SEMICN ;
PRINTFTK printf
LPARENT (
STRCON "please input d\n"
RPARENT )
SEMICN ;
IDENFR d
ASSIGN =
GETINTTK getint
LPARENT (
RPARENT )
SEMICN ;
PRINTFTK printf
LPARENT (
STRCON "a = %d, b = %d, c = %d, d = %d\n"
COMMA ,
IDENFR a
COMMA ,
IDENFR b
COMMA ,
IDENFR c
COMMA ,
IDENFR d
RPARENT )
SEMICN ;
INTTK int
IDENFR array_a
LBRACK [
INTCON 2
RBRACK ]
LBRACK [
INTCON 2
RBRACK ]
ASSIGN =
LBRACE {
LBRACE {
IDENFR a
COMMA ,
IDENFR b
RBRACE }
COMMA ,
LBRACE {
IDENFR c
COMMA ,
IDENFR d
RBRACE }
RBRACE }
SEMICN ;
IFTK if
LPARENT (
IDENFR array_a
LBRACK [
INTCON 0
RBRACK ]
LBRACK [
INTCON 0
RBRACK ]
GEQ >=
IDENFR array_a
LBRACK [
INTCON 0
RBRACK ]
LBRACK [
INTCON 1
RBRACK ]
AND &&
IDENFR array_a
LBRACK [
INTCON 0
RBRACK ]
LBRACK [
INTCON 0
RBRACK ]
GEQ >=
IDENFR array_a
LBRACK [
INTCON 1
RBRACK ]
LBRACK [
INTCON 0
RBRACK ]
OR ||
IDENFR array_a
LBRACK [
INTCON 1
RBRACK ]
LBRACK [
INTCON 1
RBRACK ]
LSS <
IDENFR array_a
LBRACK [
INTCON 1
RBRACK ]
LBRACK [
INTCON 0
RBRACK ]
OR ||
IDENFR array_a
LBRACK [
INTCON 1
RBRACK ]
LBRACK [
INTCON 1
RBRACK ]
LSS <
IDENFR array_a
LBRACK [
INTCON 0
RBRACK ]
LBRACK [
INTCON 1
RBRACK ]
AND &&
NOT !
IDENFR array_a
LBRACK [
INTCON 0
RBRACK ]
LBRACK [
INTCON 0
RBRACK ]
RPARENT )
LBRACE {
PRINTFTK printf
LPARENT (
STRCON "Hello, and\n"
RPARENT )
SEMICN ;
RBRACE }
ELSETK else
LBRACE {
PRINTFTK printf
LPARENT (
STRCON "Hello, or\n"
RPARENT )
SEMICN ;
RBRACE }
LBRACE {
RBRACE }
RETURNTK return
INTCON 0
SEMICN ;
RBRACE }
