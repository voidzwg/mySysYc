declare void @memset(i32*, i32, i32)
declare i32 @printf(i8*, ...)
declare i32 @getint()

@c_01 = constant i32 1
@c_02 = constant i32 2
@c_03 = constant i32 3
@c_04 = constant i32 4
@c_05 = constant i32 11
@c_06 = constant [3 x i32] [i32 1, i32 2, i32 3]
@c_07 = constant [2 x [2 x i32]] [[2 x i32] [i32 1, i32 2], [2 x i32] [i32 3, i32 4]]
@v_01 = global i32 1
@v_02 = global i32 0
@v_03 = global i32 3
@v_04 = global i32 0
@v_05 = global i32 2
@v_06 = global [3 x i32] [i32 1, i32 2, i32 3]
@v_07 = global [2 x [2 x i32]] [[2 x i32] [i32 1, i32 2], [2 x i32] [i32 3, i32 4]]
@void-365767597void = constant [13 x i8] c"Hello World\0A\00"
@void2028739848void = constant [10 x i8] c"20377020\0A\00"
@void-429379864void = constant [12 x i8] c"vm_01 = %d\0A\00"
@void1169262170void = constant [25 x i8] c"vm_02 = %d,  vm_03 = %d\0A\00"
@void-42131707void = constant [12 x i8] c"vm_04 = %d\0A\00"
@void1459390693void = constant [12 x i8] c"vm_AE = %d\0A\00"
@void-2061445391void = constant [12 x i8] c"vm_ME = %d\0A\00"
@void-113702151void = constant [12 x i8] c"vm_UE = %d\0A\00"
@void1353312884void = constant [12 x i8] c"vm_PE = %d\0A\00"
@void-722995104void = constant [27 x i8] c"vm_i_1 = %d,  vm_i_2 = %d\0A\00"
@void-1445604931void = constant [14 x i8] c"vs_test = %d\0A\00"

define void @func_01() #0 {
  %1 = call i32 (i8*, ...) @printf(i8* getelementptr([13 x i8], [13 x i8]* @void-365767597void, i32 0, i32 0))
  br label %basicBlock1

basicBlock1:
  br label %basicBlock2

basicBlock2:
  ret void
  ret void
}

define i32 @func_02() #0 {
  %1 = alloca i32
  %2 = alloca i32
  %3 = alloca i32
  %4 = alloca i32
  %5 = load i32, i32* @v_01
  %6 = add i32 %5, 1
  store i32 %6, i32* @v_01
  store i32 0, i32* %4
  store i32 1, i32* %3
  br label %basicBlock1

basicBlock1:
  store i32 2, i32* %2
  br label %basicBlock2

basicBlock2:
  store i32 3, i32* %1
  br label %basicBlock3

basicBlock3:
  %7 = load i32, i32* %1
  %8 = add i32 %7, 1
  store i32 %8, i32* %4
  br label %basicBlock4

basicBlock4:
  %9 = load i32, i32* %4
  %10 = load i32, i32* %1
  %11 = add i32 %9, %10
  store i32 %11, i32* %4
  br label %basicBlock5

basicBlock5:
  %12 = load i32, i32* %4
  %13 = load i32, i32* %2
  %14 = add i32 %12, %13
  store i32 %14, i32* %4
  br label %basicBlock6

basicBlock6:
  %15 = load i32, i32* %4
  %16 = load i32, i32* %3
  %17 = add i32 %15, %16
  store i32 %17, i32* %4
  %18 = load i32, i32* %4
  %19 = add i32 %18, 7
  %20 = add i32 %19, 0
  %21 = sub i32 %20, 8
  ret i32 %21
}

define i32 @func_03(i32 %a) #0 {
  %1 = alloca i32
  %2 = alloca i32
  store i32 %a, i32* %2
  store i32 1, i32* %1
  %3 = load i32, i32* %2
  %4 = load i32, i32* %1
  %5 = mul i32 %3, %4
  %6 = load i32, i32* @v_05
  %7 = mul i32 %5, %6
  %8 = sdiv i32 %7, 123
  ret i32 %8
}

define i32 @func_04(i32 %a, i32 %b) #0 {
  %1 = alloca i32
  %2 = alloca i32
  %3 = alloca i32
  %4 = alloca i32
  store i32 %a, i32* %4
  store i32 %b, i32* %3
  store i32 1, i32* %2
  store i32 2, i32* %1
  %5 = load i32, i32* %4
  %6 = load i32, i32* %2
  %7 = mul i32 %5, %6
  %8 = load i32, i32* %3
  %9 = load i32, i32* %1
  %10 = sdiv i32 %8, %9
  %11 = add i32 %7, %10
  %12 = call i32 @func_02()
  %13 = add i32 %11, %12
  %14 = load i32, i32* %3
  %15 = call i32 @func_03(i32 %14)
  %16 = sub i32 %13, %15
  ret i32 %16
}

define i32 @func_05(i32* %a) #0 {
  %1 = alloca i32*
  store i32* %a, i32** %1
  %2 = load i32*, i32** %1
  %3 = getelementptr i32, i32* %2, i32 0
  %4 = load i32, i32* %3
  %5 = mul i32 %4, 100
  ret i32 %5
}

define i32 @func_06([3 x i32]* %a) #0 {
  %1 = alloca [3 x i32]*
  store [3 x i32]* %a, [3 x i32]** %1
  %2 = load [3 x i32]*, [3 x i32]** %1
  %3 = getelementptr [3 x i32], [3 x i32]* %2, i32 0, i32 0
  %4 = load i32, i32* %3
  %5 = load [3 x i32]*, [3 x i32]** %1
  %6 = getelementptr [3 x i32], [3 x i32]* %5, i32 1, i32 1
  %7 = load i32, i32* %6
  %8 = add i32 %4, %7
  %9 = load [3 x i32]*, [3 x i32]** %1
  %10 = getelementptr [3 x i32], [3 x i32]* %9, i32 2, i32 2
  %11 = load i32, i32* %10
  %12 = add i32 %8, %11
  ret i32 %12
}

define i32 @func_07(i32 %a, i32* %b, [3 x i32]* %c) #0 {
  %1 = alloca [3 x i32]*
  %2 = alloca i32*
  %3 = alloca i32
  store i32 %a, i32* %3
  store i32* %b, i32** %2
  store [3 x i32]* %c, [3 x i32]** %1
  %4 = load i32, i32* %3
  %5 = load i32*, i32** %2
  %6 = getelementptr i32, i32* %5, i32 0
  %7 = load i32, i32* %6
  %8 = add i32 %4, %7
  %9 = load [3 x i32]*, [3 x i32]** %1
  %10 = getelementptr [3 x i32], [3 x i32]* %9, i32 0, i32 0
  %11 = load i32, i32* %10
  %12 = add i32 %8, %11
  ret i32 %12
}

define i32 @test_if_and_while_01() #0 {
  %1 = alloca i32
  %2 = alloca i32
  %3 = alloca i32
  %4 = alloca i32
  %5 = alloca i32
  %6 = alloca i32
  store i32 -10, i32* %6
  store i32 0, i32* %5
  store i32 1, i32* %4
  store i32 0, i32* %3
  store i32 0, i32* %2
  store i32 100, i32* %1
  %7 = load i32, i32* %6
  %8 = icmp eq i32 %7, 0
  %9 = zext i1 %8 to i32
  %10 = icmp sge i32 %9, 0
  br i1 %10, label %basicBlock1, label %basicBlock4

basicBlock1:
  br label %basicBlock2

basicBlock2:
  store i32 2, i32* %4
  store i32 -1, i32* %3
  br label %basicBlock3

basicBlock3:
  br label %basicBlock4

basicBlock4:
  %11 = load i32, i32* %5
  %12 = icmp slt i32 %11, 0
  br i1 %12, label %basicBlock5, label %basicBlock11

basicBlock5:
  br label %basicBlock6

basicBlock6:
  %13 = load i32, i32* @v_01
  store i32 %13, i32* %3
  %14 = load i32, i32* %4
  %15 = icmp eq i32 %14, 1
  br i1 %15, label %basicBlock7, label %basicBlock8

basicBlock7:
  %16 = call i32 @func_02()
  store i32 %16, i32* %3
  br label %basicBlock9

basicBlock8:
  store i32 56088, i32* %3
  br label %basicBlock9

basicBlock9:
  br label %basicBlock10

basicBlock10:
  br label %basicBlock14

basicBlock11:
  br label %basicBlock12

basicBlock12:
  %17 = load i32, i32* @v_01
  %18 = load i32, i32* @v_05
  %19 = call i32 @func_04(i32 %17, i32 %18)
  %20 = sub i32 0, %19
  store i32 %20, i32* %3
  br label %basicBlock13

basicBlock13:
  br label %basicBlock14

basicBlock14:
  br label %basicBlock15

basicBlock15:
  %21 = load i32, i32* %3
  %22 = icmp sgt i32 %21, 0
  br i1 %22, label %basicBlock16, label %basicBlock17

basicBlock16:
  %23 = load i32, i32* %3
  %24 = sub i32 %23, 1
  store i32 %24, i32* %3
  br label %basicBlock15

basicBlock17:
  br label %basicBlock18

basicBlock18:
  %25 = load i32, i32* %6
  %26 = icmp slt i32 %25, 0
  br i1 %26, label %basicBlock19, label %basicBlock28

basicBlock19:
  br label %basicBlock20

basicBlock20:
  %27 = load i32, i32* %2
  %28 = add i32 %27, 1
  store i32 %28, i32* %2
  %29 = load i32, i32* %2
  %30 = icmp sle i32 %29, 10
  br i1 %30, label %basicBlock21, label %basicBlock23

basicBlock21:
  br label %basicBlock18

basicBlock22:
  br label %basicBlock23

basicBlock23:
  %31 = load i32, i32* %2
  %32 = icmp eq i32 %31, 12
  br i1 %32, label %basicBlock24, label %basicBlock26

basicBlock24:
  br label %basicBlock28

basicBlock25:
  br label %basicBlock26

basicBlock26:
  br label %basicBlock27

basicBlock27:
  br label %basicBlock18

basicBlock28:
  %33 = load i32, i32* %1
  %34 = icmp sgt i32 %33, 40
  br i1 %34, label %basicBlock29, label %basicBlock47

basicBlock29:
  br label %basicBlock30

basicBlock30:
  %35 = load i32, i32* %1
  %36 = icmp sgt i32 %35, 50
  br i1 %36, label %basicBlock31, label %basicBlock44

basicBlock31:
  br label %basicBlock32

basicBlock32:
  %37 = load i32, i32* %1
  %38 = icmp sgt i32 %37, 60
  br i1 %38, label %basicBlock33, label %basicBlock41

basicBlock33:
  br label %basicBlock34

basicBlock34:
  %39 = load i32, i32* %1
  %40 = icmp sgt i32 %39, 70
  br i1 %40, label %basicBlock35, label %basicBlock38

basicBlock35:
  br label %basicBlock36

basicBlock36:
  store i32 0, i32* %2
  br label %basicBlock37

basicBlock37:
  br label %basicBlock39

basicBlock38:
  store i32 -1, i32* %2
  br label %basicBlock39

basicBlock39:
  br label %basicBlock40

basicBlock40:
  br label %basicBlock42

basicBlock41:
  store i32 -2, i32* %2
  br label %basicBlock42

basicBlock42:
  br label %basicBlock43

basicBlock43:
  br label %basicBlock45

basicBlock44:
  store i32 -3, i32* %2
  br label %basicBlock45

basicBlock45:
  br label %basicBlock46

basicBlock46:
  br label %basicBlock48

basicBlock47:
  store i32 -4, i32* %2
  br label %basicBlock48

basicBlock48:
  %41 = load i32, i32* %2
  ret i32 %41
}

define i32 @test_if_and_while_02() #0 {
  %1 = alloca i32
  %2 = alloca i32
  %3 = alloca i32
  store i32 0, i32* %3
  %4 = load i32, i32* @v_01
  %5 = icmp ne i32 %4, 0
  br i1 %5, label %basicBlock1, label %basicBlock2

basicBlock1:
  %6 = load i32, i32* %3
  %7 = add i32 %6, 1
  store i32 %7, i32* %3
  br label %basicBlock2

basicBlock2:
  %8 = load i32, i32* @v_01
  %9 = icmp slt i32 123, %8
  br i1 %9, label %basicBlock3, label %basicBlock4

basicBlock3:
  %10 = load i32, i32* %3
  %11 = add i32 %10, 1
  store i32 %11, i32* %3
  br label %basicBlock4

basicBlock4:
  %12 = load i32, i32* @v_01
  %13 = mul i32 114514, %12
  %14 = load i32, i32* @v_01
  %15 = call i32 @func_03(i32 %14)
  %16 = add i32 %15, 6
  %17 = sdiv i32 1, %16
  %18 = add i32 %13, %17
  %19 = icmp sgt i32 1, %18
  br i1 %19, label %basicBlock5, label %basicBlock6

basicBlock5:
  %20 = load i32, i32* %3
  %21 = add i32 %20, 1
  store i32 %21, i32* %3
  br label %basicBlock6

basicBlock6:
  %22 = load i32, i32* @v_01
  %23 = call i32 @func_03(i32 %22)
  %24 = load i32, i32* @v_01
  %25 = load i32, i32* @v_05
  %26 = call i32 @func_04(i32 %24, i32 %25)
  %27 = icmp sle i32 %23, %26
  br i1 %27, label %basicBlock7, label %basicBlock8

basicBlock7:
  %28 = load i32, i32* %3
  %29 = add i32 %28, 1
  store i32 %29, i32* %3
  br label %basicBlock8

basicBlock8:
  %30 = load i32, i32* @v_05
  %31 = call i32 @func_03(i32 %30)
  %32 = sub i32 0, %31
  %33 = sub i32 0, %32
  %34 = icmp sge i32 123, %33
  br i1 %34, label %basicBlock9, label %basicBlock10

basicBlock9:
  %35 = load i32, i32* %3
  %36 = add i32 %35, 1
  store i32 %36, i32* %3
  br label %basicBlock10

basicBlock10:
  %37 = load i32, i32* @v_01
  %38 = icmp slt i32 123, %37
  %39 = load i32, i32* @v_01
  %40 = call i32 @func_03(i32 %39)
  %41 = load i32, i32* @v_01
  %42 = load i32, i32* @v_05
  %43 = call i32 @func_04(i32 %41, i32 %42)
  %44 = icmp sle i32 %40, %43
  %45 = zext i1 %38 to i32
  %46 = zext i1 %44 to i32
  %47 = icmp eq i32 %45, %46
  br i1 %47, label %basicBlock11, label %basicBlock12

basicBlock11:
  %48 = load i32, i32* %3
  %49 = add i32 %48, 1
  store i32 %49, i32* %3
  br label %basicBlock12

basicBlock12:
  %50 = load i32, i32* @v_01
  %51 = icmp slt i32 123, %50
  %52 = load i32, i32* @v_01
  %53 = call i32 @func_03(i32 %52)
  %54 = load i32, i32* @v_01
  %55 = load i32, i32* @v_05
  %56 = call i32 @func_04(i32 %54, i32 %55)
  %57 = icmp sge i32 %53, %56
  %58 = zext i1 %51 to i32
  %59 = zext i1 %57 to i32
  %60 = icmp ne i32 %58, %59
  br i1 %60, label %basicBlock13, label %basicBlock14

basicBlock13:
  %61 = load i32, i32* %3
  %62 = add i32 %61, 1
  store i32 %62, i32* %3
  br label %basicBlock14

basicBlock14:
  store i32 1, i32* %2
  store i32 2, i32* %1
  %63 = load i32, i32* %2
  %64 = icmp eq i32 %63, 1
  br i1 %64, label %basicBlock15, label %basicBlock18

basicBlock15:
  %65 = call i32 @func_02()
  %66 = icmp ne i32 %65, 0
  br i1 %66, label %basicBlock16, label %basicBlock18

basicBlock16:
  %67 = load i32, i32* %2
  %68 = icmp eq i32 %67, 2
  br i1 %68, label %basicBlock17, label %basicBlock18

basicBlock17:
  %69 = load i32, i32* %3
  %70 = add i32 %69, 1
  store i32 %70, i32* %3
  br label %basicBlock18

basicBlock18:
  %71 = load i32, i32* %1
  %72 = icmp ne i32 %71, 2
  br i1 %72, label %basicBlock20, label %basicBlock19

basicBlock19:
  %73 = call i32 @func_02()
  %74 = icmp ne i32 %73, 0
  br i1 %74, label %basicBlock20, label %basicBlock21

basicBlock20:
  %75 = load i32, i32* %3
  %76 = add i32 %75, 1
  store i32 %76, i32* %3
  br label %basicBlock21

basicBlock21:
  %77 = load i32, i32* %2
  %78 = icmp eq i32 %77, 2
  br i1 %78, label %basicBlock25, label %basicBlock22

basicBlock22:
  %79 = load i32, i32* %2
  %80 = icmp eq i32 %79, 3
  br i1 %80, label %basicBlock25, label %basicBlock23

basicBlock23:
  %81 = load i32, i32* %2
  %82 = icmp eq i32 %81, 4
  br i1 %82, label %basicBlock25, label %basicBlock24

basicBlock24:
  %83 = load i32, i32* %2
  %84 = icmp eq i32 %83, 5
  br i1 %84, label %basicBlock25, label %basicBlock26

basicBlock25:
  %85 = load i32, i32* %3
  %86 = add i32 %85, 1
  store i32 %86, i32* %3
  br label %basicBlock26

basicBlock26:
  %87 = load i32, i32* %2
  %88 = icmp eq i32 %87, 2
  br i1 %88, label %basicBlock29, label %basicBlock27

basicBlock27:
  %89 = load i32, i32* %2
  %90 = icmp eq i32 %89, 1
  br i1 %90, label %basicBlock28, label %basicBlock30

basicBlock28:
  %91 = load i32, i32* %1
  %92 = icmp eq i32 %91, 2
  br i1 %92, label %basicBlock29, label %basicBlock30

basicBlock29:
  %93 = load i32, i32* %3
  %94 = add i32 %93, 1
  store i32 %94, i32* %3
  br label %basicBlock30

basicBlock30:
  %95 = load i32, i32* %3
  ret i32 %95
}

define i32 @main() #0 {
  %1 = alloca i32
  %2 = alloca i32
  %3 = alloca i32
  %4 = alloca i32
  %5 = alloca i32
  %6 = alloca i32
  %7 = alloca i32
  %8 = alloca i32
  %9 = alloca i32
  %10 = alloca i32
  %11 = alloca i32
  %12 = alloca i32
  %13 = alloca i32
  %14 = alloca i32
  %15 = alloca i32
  %16 = alloca i32
  %17 = alloca [3 x [3 x i32]]
  %18 = alloca [3 x i32]
  %19 = alloca [3 x [3 x i32]]
  %20 = alloca [3 x i32]
  %21 = alloca [2 x i32]
  %22 = alloca i32
  %23 = alloca i32
  %24 = alloca i32
  %25 = alloca i32
  %26 = alloca i32
  %27 = alloca i32
  %28 = alloca i32
  %29 = alloca i32
  %30 = alloca i32
  %31 = alloca i32
  %32 = alloca i32
  %33 = alloca i32
  %34 = alloca i32
  %35 = alloca i32
  %36 = alloca i32
  %37 = alloca i32
  %38 = alloca i32
  %39 = alloca i32
  store i32 1, i32* %39
  store i32 3, i32* %38
  store i32 2, i32* %37
  store i32 114514, i32* %36
  %40 = load i32, i32* @v_01
  store i32 %40, i32* %35
  store i32 2, i32* %34
  %41 = call i32 @func_02()
  %42 = add i32 -169, %41
  store i32 %42, i32* %33
  %43 = load i32, i32* %36
  store i32 %43, i32* %32
  %44 = load i32, i32* @v_01
  %45 = call i32 @func_03(i32 %44)
  store i32 %45, i32* %31
  store i32 -114514, i32* %30
  %46 = load i32, i32* @v_01
  %47 = load i32, i32* @v_03
  %48 = call i32 @func_04(i32 %46, i32 %47)
  %49 = sub i32 0, %48
  %50 = sub i32 0, %49
  %51 = sub i32 0, %50
  store i32 %51, i32* %29
  %52 = load i32, i32* %32
  store i32 %52, i32* %28
  %53 = load i32, i32* @v_01
  %54 = mul i32 10, %53
  store i32 %54, i32* %27
  %55 = load i32, i32* @v_01
  %56 = call i32 @func_03(i32 %55)
  %57 = sdiv i32 %56, 2
  store i32 %57, i32* %26
  %58 = load i32, i32* @v_01
  %59 = load i32, i32* @v_05
  %60 = call i32 @func_04(i32 %58, i32 %59)
  %61 = sub i32 0, %60
  %62 = sub i32 0, %61
  %63 = sub i32 0, %62
  %64 = srem i32 -1, %63
  store i32 %64, i32* %25
  %65 = load i32, i32* %28
  store i32 %65, i32* %24
  %66 = load i32, i32* @v_01
  %67 = mul i32 114514, %66
  %68 = load i32, i32* @v_01
  %69 = call i32 @func_03(i32 %68)
  %70 = add i32 %69, 6
  %71 = sdiv i32 2, %70
  %72 = add i32 %67, %71
  store i32 %72, i32* %23
  %73 = load i32, i32* @v_01
  %74 = load i32, i32* @v_05
  %75 = call i32 @func_04(i32 %73, i32 %74)
  %76 = sub i32 0, %75
  %77 = sub i32 0, %76
  %78 = sub i32 0, %77
  %79 = srem i32 -1, %78
  %80 = sub i32 %79, 123
  store i32 %80, i32* %22
  %81 = getelementptr [2 x i32], [2 x i32]* %21, i32 0, i32 0
  store i32 1, i32* %81
  %82 = getelementptr [2 x i32], [2 x i32]* %21, i32 0, i32 1
  store i32 1, i32* %82
  %83 = getelementptr [3 x i32], [3 x i32]* %20, i32 0, i32 0
  store i32 1, i32* %83
  %84 = getelementptr [3 x i32], [3 x i32]* %20, i32 0, i32 1
  store i32 2, i32* %84
  %85 = getelementptr [3 x i32], [3 x i32]* %20, i32 0, i32 2
  store i32 3, i32* %85
  %86 = getelementptr [3 x [3 x i32]], [3 x [3 x i32]]* %19, i32 0, i32 0, i32 0
  store i32 11, i32* %86
  %87 = getelementptr [3 x [3 x i32]], [3 x [3 x i32]]* %19, i32 0, i32 0, i32 1
  store i32 12, i32* %87
  %88 = getelementptr [3 x [3 x i32]], [3 x [3 x i32]]* %19, i32 0, i32 0, i32 2
  store i32 13, i32* %88
  %89 = getelementptr [3 x [3 x i32]], [3 x [3 x i32]]* %19, i32 0, i32 1, i32 0
  store i32 21, i32* %89
  %90 = getelementptr [3 x [3 x i32]], [3 x [3 x i32]]* %19, i32 0, i32 1, i32 1
  store i32 22, i32* %90
  %91 = getelementptr [3 x [3 x i32]], [3 x [3 x i32]]* %19, i32 0, i32 1, i32 2
  store i32 23, i32* %91
  %92 = getelementptr [3 x [3 x i32]], [3 x [3 x i32]]* %19, i32 0, i32 2, i32 0
  store i32 31, i32* %92
  %93 = getelementptr [3 x [3 x i32]], [3 x [3 x i32]]* %19, i32 0, i32 2, i32 1
  store i32 32, i32* %93
  %94 = getelementptr [3 x [3 x i32]], [3 x [3 x i32]]* %19, i32 0, i32 2, i32 2
  store i32 33, i32* %94
  %95 = getelementptr [2 x i32], [2 x i32]* %21, i32 0, i32 0
  %96 = load i32, i32* %95
  store i32 %96, i32* %16
  %97 = getelementptr [3 x i32], [3 x i32]* %20, i32 0, i32 1
  %98 = load i32, i32* %97
  store i32 %98, i32* %15
  %99 = getelementptr [3 x [3 x i32]], [3 x [3 x i32]]* %19, i32 0, i32 1, i32 2
  %100 = load i32, i32* %99
  store i32 %100, i32* %14
  %101 = getelementptr [3 x i32], [3 x i32]* %20, i32 0, i32 0
  store i32 10, i32* %101
  %102 = getelementptr [3 x [3 x i32]], [3 x [3 x i32]]* %19, i32 0, i32 1, i32 2
  store i32 10, i32* %102
  %103 = load i32, i32* %16
  %104 = load i32, i32* %15
  %105 = add i32 %103, %104
  %106 = load i32, i32* %14
  %107 = add i32 %105, %106
  %108 = getelementptr [3 x [3 x i32]], [3 x [3 x i32]]* %19, i32 0, i32 0
  %109 = getelementptr [3 x i32], [3 x i32]* %108, i32 0, i32 0
  %110 = call i32 @func_05(i32* %109)
  %111 = add i32 %107, %110
  %112 = getelementptr [3 x [3 x i32]], [3 x [3 x i32]]* %19, i32 0, i32 0
  %113 = call i32 @func_06([3 x i32]* %112)
  %114 = add i32 %111, %113
  %115 = load i32, i32* @v_01
  %116 = getelementptr [3 x i32], [3 x i32]* %20, i32 0, i32 0
  %117 = getelementptr [3 x [3 x i32]], [3 x [3 x i32]]* %19, i32 0, i32 0
  %118 = call i32 @func_07(i32 %115, i32* %116, [3 x i32]* %117)
  %119 = add i32 %114, %118
  store i32 %119, i32* %13
  store i32 1, i32* %11
  %120 = call i32 @getint()
  store i32 %120, i32* %10
  %121 = call i32 @test_if_and_while_01()
  store i32 %121, i32* %9
  %122 = call i32 @test_if_and_while_02()
  store i32 %122, i32* %8
  %123 = call i32 @func_02()
  store i32 %123, i32* %7
  %124 = load i32, i32* @v_03
  %125 = call i32 @func_03(i32 %124)
  store i32 %125, i32* %6
  %126 = load i32, i32* %11
  %127 = load i32, i32* @v_03
  %128 = call i32 @func_04(i32 %126, i32 %127)
  store i32 %128, i32* %5
  %129 = load i32, i32* %24
  %130 = load i32, i32* %23
  %131 = sdiv i32 %129, %130
  %132 = load i32, i32* %22
  %133 = srem i32 %131, %132
  store i32 %133, i32* %4
  %134 = load i32, i32* %28
  %135 = load i32, i32* %27
  %136 = mul i32 %134, %135
  %137 = load i32, i32* %26
  %138 = load i32, i32* %25
  %139 = mul i32 %137, %138
  %140 = add i32 %136, %139
  store i32 %140, i32* %3
  %141 = load i32, i32* %32
  %142 = load i32, i32* %31
  %143 = sub i32 %141, %142
  %144 = load i32, i32* %30
  %145 = sub i32 %143, %144
  %146 = load i32, i32* %30
  %147 = sub i32 %145, %146
  %148 = load i32, i32* %29
  %149 = sub i32 %147, %148
  store i32 %149, i32* %2
  %150 = load i32, i32* %36
  %151 = load i32, i32* %35
  %152 = add i32 %150, %151
  %153 = load i32, i32* %34
  %154 = add i32 %152, %153
  %155 = load i32, i32* %33
  %156 = add i32 %154, %155
  store i32 %156, i32* %1
  %157 = call i32 (i8*, ...) @printf(i8* getelementptr([10 x i8], [10 x i8]* @void2028739848void, i32 0, i32 0))
  %158 = load i32, i32* %10
  %159 = add i32 %158, 1
  %160 = call i32 (i8*, ...) @printf(i8* getelementptr([12 x i8], [12 x i8]* @void-429379864void, i32 0, i32 0), i32 %159)
  %161 = load i32, i32* %7
  %162 = load i32, i32* %6
  %163 = call i32 (i8*, ...) @printf(i8* getelementptr([25 x i8], [25 x i8]* @void1169262170void, i32 0, i32 0), i32 %161, i32 %162)
  %164 = load i32, i32* %5
  %165 = call i32 (i8*, ...) @printf(i8* getelementptr([12 x i8], [12 x i8]* @void-42131707void, i32 0, i32 0), i32 %164)
  %166 = load i32, i32* %4
  %167 = call i32 (i8*, ...) @printf(i8* getelementptr([12 x i8], [12 x i8]* @void1459390693void, i32 0, i32 0), i32 %166)
  %168 = load i32, i32* %3
  %169 = call i32 (i8*, ...) @printf(i8* getelementptr([12 x i8], [12 x i8]* @void-2061445391void, i32 0, i32 0), i32 %168)
  %170 = load i32, i32* %2
  %171 = call i32 (i8*, ...) @printf(i8* getelementptr([12 x i8], [12 x i8]* @void-113702151void, i32 0, i32 0), i32 %170)
  %172 = load i32, i32* %1
  %173 = call i32 (i8*, ...) @printf(i8* getelementptr([12 x i8], [12 x i8]* @void1353312884void, i32 0, i32 0), i32 %172)
  %174 = load i32, i32* %9
  %175 = load i32, i32* %8
  %176 = call i32 (i8*, ...) @printf(i8* getelementptr([27 x i8], [27 x i8]* @void-722995104void, i32 0, i32 0), i32 %174, i32 %175)
  %177 = load i32, i32* %13
  %178 = call i32 (i8*, ...) @printf(i8* getelementptr([14 x i8], [14 x i8]* @void-1445604931void, i32 0, i32 0), i32 %177)
  ret i32 0
}

