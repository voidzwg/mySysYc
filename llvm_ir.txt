declare void @memset(i32*, i32, i32)
declare i32 @printf(i8*, ...)
declare i32 @getint()

@g_const_1 = constant i32 1
@g_const_2 = constant i32 1
@g_const_3 = constant i32 1
@g_const_4 = constant i32 1
@g_const_5 = constant [2 x i32] [i32 1, i32 2]
@g_const_6 = constant [2 x [2 x i32]] [[2 x i32] [i32 1, i32 2], [2 x i32] [i32 0, i32 0]]
@g_const_7 = constant [2 x [2 x i32]] [[2 x i32] [i32 1, i32 1], [2 x i32] [i32 1, i32 2]]
@g_var_1 = global i32 1
@g_var_2 = global i32 1
@g_var_3 = global i32 1
@g_var_4 = global i32 1
@g_var_5 = global [2 x i32] [i32 1, i32 2]
@g_var_6 = global [2 x [2 x i32]] [[2 x i32] [i32 1, i32 1], [2 x i32] [i32 1, i32 1]]
@g_var_7 = global [2 x [2 x i32]] zeroinitializer
@g_var_8 = global [2 x [2 x i32]] [[2 x i32] [i32 1, i32 1], [2 x i32] [i32 1, i32 1]]
@void757632411void = constant [10 x i8] c"19373135\0A\00"
@void409915973void = constant [43 x i8] c"global g_var_6[1][0]:%d, g_var_6[1][1]:%d\0A\00"
@void617579290void = constant [66 x i8] c"local l_var_4:%d, l_var_5:%d, l_var_6:%d, l_var_7:%d, l_var_8:%d\0A\00"
@void255748834void = constant [16 x i8] c"exp l_var_4:%d\0A\00"
@void59235329void = constant [16 x i8] c"exp l_var_5:%d\0A\00"
@void-137278176void = constant [16 x i8] c"exp l_var_6:%d\0A\00"
@void-239712286void = constant [15 x i8] c"if l_var_4:%d\0A\00"
@void840656237void = constant [18 x i8] c"while l_var_5:%d\0A\00"
@void707479143void = constant [18 x i8] c"getint l_var_6:%d\00"

define i32 @fun_int_1() #0 {
  ret i32 1
}

define i32 @fun_int_2(i32 %a) #0 {
  %1 = alloca i32
  store i32 %a, i32* %1
  ret i32 1
}

define i32 @fun_int_3(i32* %a) #0 {
  %1 = alloca i32*
  store i32* %a, i32** %1
  ret i32 1
}

define i32 @fun_int_4(i32 %a, i32 %b) #0 {
  %1 = alloca i32
  %2 = alloca i32
  store i32 %a, i32* %2
  store i32 %b, i32* %1
  ret i32 1
}

define i32 @fun_int_5(i32* %a, [2 x i32]* %b) #0 {
  %1 = alloca [2 x i32]*
  %2 = alloca i32*
  store i32* %a, i32** %2
  store [2 x i32]* %b, [2 x i32]** %1
  ret i32 1
}

define i32 @fun_int_6(i32* %a, [2 x i32]* %b, i32 %c) #0 {
  %1 = alloca i32
  %2 = alloca [2 x i32]*
  %3 = alloca i32*
  store i32* %a, i32** %3
  store [2 x i32]* %b, [2 x i32]** %2
  store i32 %c, i32* %1
  ret i32 1
}

define i32 @fun_int_7(i32* %a) #0 {
  %1 = alloca i32*
  store i32* %a, i32** %1
  ret i32 1
}

define void @fun_void_1() #0 {
  ret void
  ret void
}

define void @fun_void_2(i32 %a) #0 {
  %1 = alloca i32
  store i32 %a, i32* %1
  ret void
  ret void
}

define void @fun_void_3(i32* %a) #0 {
  %1 = alloca i32*
  store i32* %a, i32** %1
  ret void
  ret void
}

define void @fun_void_4(i32 %a, i32 %b) #0 {
  %1 = alloca i32
  %2 = alloca i32
  store i32 %a, i32* %2
  store i32 %b, i32* %1
  ret void
}

define void @fun_void_5(i32* %a, [2 x i32]* %b) #0 {
  %1 = alloca [2 x i32]*
  %2 = alloca i32*
  store i32* %a, i32** %2
  store [2 x i32]* %b, [2 x i32]** %1
  ret void
}

define void @fun_void_6(i32* %a, [2 x i32]* %b, i32 %c) #0 {
  %1 = alloca i32
  %2 = alloca [2 x i32]*
  %3 = alloca i32*
  store i32* %a, i32** %3
  store [2 x i32]* %b, [2 x i32]** %2
  store i32 %c, i32* %1
  ret void
  ret void
}

define void @fun_void_7(i32* %a) #0 {
  %1 = alloca i32*
  store i32* %a, i32** %1
  ret void
  ret void
}

define i32 @main() #0 {
  %1 = alloca i32
  %2 = alloca i32
  %3 = alloca i32
  %4 = alloca i32
  %5 = alloca i32
  %6 = alloca i32
  %7 = alloca [2 x i32]
  %8 = alloca [2 x i32]
  %9 = alloca i32
  %10 = alloca i32
  %11 = alloca i32
  %12 = alloca i32
  %13 = alloca i32
  %14 = alloca i32
  %15 = alloca i32
  %16 = call i32 (i8*, ...) @printf(i8* getelementptr([10 x i8], [10 x i8]* @void757632411void, i32 0, i32 0))
  %17 = getelementptr [2 x [2 x i32]], [2 x [2 x i32]]* @g_var_6, i32 0, i32 1, i32 0
  %18 = load i32, i32* %17
  %19 = getelementptr [2 x [2 x i32]], [2 x [2 x i32]]* @g_var_6, i32 0, i32 1, i32 1
  %20 = load i32, i32* %19
  %21 = call i32 (i8*, ...) @printf(i8* getelementptr([43 x i8], [43 x i8]* @void409915973void, i32 0, i32 0), i32 %18, i32 %20)
  store i32 1, i32* %15
  store i32 1, i32* %14
  store i32 1, i32* %13
  store i32 1, i32* %12
  store i32 1, i32* %11
  store i32 1, i32* %10
  store i32 1, i32* %9
  %22 = getelementptr [2 x i32], [2 x i32]* %8, i32 0, i32 0
  store i32 1, i32* %22
  %23 = getelementptr [2 x i32], [2 x i32]* %8, i32 0, i32 1
  store i32 1, i32* %23
  %24 = getelementptr [2 x i32], [2 x i32]* %7, i32 0, i32 0
  store i32 1, i32* %24
  %25 = getelementptr [2 x i32], [2 x i32]* %7, i32 0, i32 1
  store i32 2, i32* %25
  store i32 1, i32* %6
  store i32 1, i32* %5
  store i32 1, i32* %4
  store i32 10, i32* %3
  store i32 100, i32* %2
  %26 = load i32, i32* %6
  %27 = load i32, i32* %5
  %28 = load i32, i32* %4
  %29 = load i32, i32* %3
  %30 = load i32, i32* %2
  %31 = call i32 (i8*, ...) @printf(i8* getelementptr([66 x i8], [66 x i8]* @void617579290void, i32 0, i32 0), i32 %26, i32 %27, i32 %28, i32 %29, i32 %30)
  store i32 1, i32* %6
  %32 = load i32, i32* %6
  %33 = load i32, i32* %6
  %34 = add i32 %32, %33
  %35 = load i32, i32* %6
  %36 = sub i32 %34, %35
  store i32 %36, i32* %5
  store i32 1, i32* %4
  store i32 0, i32* %6
  store i32 1, i32* %6
  %37 = load i32, i32* %6
  %38 = load i32, i32* %6
  %39 = mul i32 %37, %38
  %40 = load i32, i32* %6
  %41 = srem i32 %39, %40
  %42 = load i32, i32* %6
  %43 = sdiv i32 %41, %42
  store i32 %43, i32* %5
  store i32 0, i32* %4
  %44 = load i32, i32* %6
  %45 = call i32 (i8*, ...) @printf(i8* getelementptr([16 x i8], [16 x i8]* @void255748834void, i32 0, i32 0), i32 %44)
  %46 = load i32, i32* %5
  %47 = call i32 (i8*, ...) @printf(i8* getelementptr([16 x i8], [16 x i8]* @void59235329void, i32 0, i32 0), i32 %46)
  %48 = load i32, i32* %4
  %49 = call i32 (i8*, ...) @printf(i8* getelementptr([16 x i8], [16 x i8]* @void-137278176void, i32 0, i32 0), i32 %48)
  %50 = call i32 @fun_int_1()
  store i32 %50, i32* %3
  %51 = load i32, i32* %2
  %52 = call i32 @fun_int_2(i32 %51)
  store i32 %52, i32* %3
  %53 = getelementptr [2 x i32], [2 x i32]* %8, i32 0, i32 0
  %54 = call i32 @fun_int_3(i32* %53)
  store i32 %54, i32* %3
  %55 = load i32, i32* %2
  %56 = load i32, i32* %2
  %57 = call i32 @fun_int_4(i32 %55, i32 %56)
  store i32 %57, i32* %3
  %58 = getelementptr [2 x i32], [2 x i32]* %8, i32 0, i32 0
  %59 = getelementptr [2 x [2 x i32]], [2 x [2 x i32]]* @g_var_6, i32 0, i32 0
  %60 = call i32 @fun_int_5(i32* %58, [2 x i32]* %59)
  store i32 %60, i32* %3
  %61 = getelementptr [2 x i32], [2 x i32]* %8, i32 0, i32 0
  %62 = getelementptr [2 x [2 x i32]], [2 x [2 x i32]]* @g_var_6, i32 0, i32 0
  %63 = load i32, i32* %2
  %64 = call i32 @fun_int_6(i32* %61, [2 x i32]* %62, i32 %63)
  store i32 %64, i32* %3
  %65 = getelementptr [2 x [2 x i32]], [2 x [2 x i32]]* @g_var_6, i32 0, i32 1
  %66 = getelementptr [2 x i32], [2 x i32]* %65, i32 0, i32 0
  %67 = call i32 @fun_int_7(i32* %66)
  store i32 %67, i32* %3
  call void @fun_void_1()
  %68 = load i32, i32* %2
  call void @fun_void_2(i32 %68)
  %69 = getelementptr [2 x i32], [2 x i32]* %8, i32 0, i32 0
  call void @fun_void_3(i32* %69)
  %70 = load i32, i32* %2
  %71 = load i32, i32* %2
  call void @fun_void_4(i32 %70, i32 %71)
  %72 = getelementptr [2 x i32], [2 x i32]* %8, i32 0, i32 0
  %73 = getelementptr [2 x [2 x i32]], [2 x [2 x i32]]* @g_var_6, i32 0, i32 0
  call void @fun_void_5(i32* %72, [2 x i32]* %73)
  %74 = getelementptr [2 x i32], [2 x i32]* %8, i32 0, i32 0
  %75 = getelementptr [2 x [2 x i32]], [2 x [2 x i32]]* @g_var_6, i32 0, i32 0
  %76 = load i32, i32* %2
  call void @fun_void_6(i32* %74, [2 x i32]* %75, i32 %76)
  %77 = getelementptr [2 x [2 x i32]], [2 x [2 x i32]]* @g_var_6, i32 0, i32 1
  %78 = getelementptr [2 x i32], [2 x i32]* %77, i32 0, i32 0
  call void @fun_void_7(i32* %78)
  br label %basicBlock1

basicBlock1:
  br label %basicBlock2

basicBlock2:
  br label %basicBlock3

basicBlock3:
  store i32 1, i32* %9
  %79 = load i32, i32* %9
  %80 = add i32 %79, 1
  %81 = mul i32 %80, 2
  store i32 %81, i32* %9
  br label %basicBlock4

basicBlock4:
  %82 = load i32, i32* %6
  %83 = icmp ne i32 %82, 1
  br i1 %83, label %basicBlock5, label %basicBlock6

basicBlock5:
  store i32 1, i32* %6
  br label %basicBlock6

basicBlock6:
  %84 = load i32, i32* %6
  %85 = icmp eq i32 %84, 1
  br i1 %85, label %basicBlock7, label %basicBlock8

basicBlock7:
  store i32 2, i32* %6
  br label %basicBlock8

basicBlock8:
  %86 = load i32, i32* %6
  %87 = icmp eq i32 %86, 2
  br i1 %87, label %basicBlock9, label %basicBlock10

basicBlock9:
  store i32 3, i32* %6
  br label %basicBlock11

basicBlock10:
  store i32 4, i32* %6
  br label %basicBlock11

basicBlock11:
  %88 = load i32, i32* %6
  %89 = call i32 (i8*, ...) @printf(i8* getelementptr([15 x i8], [15 x i8]* @void-239712286void, i32 0, i32 0), i32 %88)
  br label %basicBlock12

basicBlock12:
  %90 = load i32, i32* %5
  %91 = icmp slt i32 %90, 4
  br i1 %91, label %basicBlock13, label %basicBlock16

basicBlock13:
  br label %basicBlock14

basicBlock14:
  %92 = load i32, i32* %5
  %93 = sub i32 %92, -1
  store i32 %93, i32* %5
  br label %basicBlock15

basicBlock15:
  br label %basicBlock12

basicBlock16:
  br label %basicBlock17

basicBlock17:
  %94 = load i32, i32* %5
  %95 = icmp sgt i32 %94, 2
  br i1 %95, label %basicBlock18, label %basicBlock21

basicBlock18:
  br label %basicBlock19

basicBlock19:
  %96 = load i32, i32* %5
  %97 = add i32 %96, -1
  store i32 %97, i32* %5
  br label %basicBlock20

basicBlock20:
  br label %basicBlock17

basicBlock21:
  br label %basicBlock22

basicBlock22:
  %98 = load i32, i32* %5
  %99 = icmp sle i32 %98, 3
  br i1 %99, label %basicBlock23, label %basicBlock26

basicBlock23:
  br label %basicBlock24

basicBlock24:
  %100 = load i32, i32* %5
  %101 = sub i32 %100, -1
  store i32 %101, i32* %5
  br label %basicBlock25

basicBlock25:
  br label %basicBlock22

basicBlock26:
  br label %basicBlock27

basicBlock27:
  %102 = load i32, i32* %5
  %103 = icmp sge i32 %102, 1
  br i1 %103, label %basicBlock28, label %basicBlock31

basicBlock28:
  br label %basicBlock29

basicBlock29:
  %104 = load i32, i32* %5
  %105 = add i32 %104, -1
  store i32 %105, i32* %5
  br label %basicBlock30

basicBlock30:
  br label %basicBlock27

basicBlock31:
  %106 = load i32, i32* %5
  %107 = call i32 (i8*, ...) @printf(i8* getelementptr([18 x i8], [18 x i8]* @void840656237void, i32 0, i32 0), i32 %106)
  br label %basicBlock32

basicBlock32:
  %108 = load i32, i32* %5
  %109 = icmp ne i32 %108, 1
  br i1 %109, label %basicBlock33, label %basicBlock37

basicBlock33:
  br label %basicBlock34

basicBlock34:
  store i32 1, i32* %5
  br label %basicBlock37

basicBlock35:
  store i32 2, i32* %5
  br label %basicBlock36

basicBlock36:
  br label %basicBlock32

basicBlock37:
  br label %basicBlock38

basicBlock38:
  %110 = load i32, i32* %5
  %111 = icmp ne i32 %110, 0
  br i1 %111, label %basicBlock39, label %basicBlock43

basicBlock39:
  br label %basicBlock40

basicBlock40:
  store i32 0, i32* %5
  br label %basicBlock38

basicBlock41:
  store i32 1, i32* %5
  br label %basicBlock42

basicBlock42:
  br label %basicBlock38

basicBlock43:
  %112 = load i32, i32* %5
  %113 = call i32 (i8*, ...) @printf(i8* getelementptr([18 x i8], [18 x i8]* @void840656237void, i32 0, i32 0), i32 %112)
  br label %basicBlock44

basicBlock44:
  %114 = load i32, i32* %5
  %115 = icmp eq i32 %114, 0
  br i1 %115, label %basicBlock45, label %basicBlock48

basicBlock45:
  br label %basicBlock46

basicBlock46:
  store i32 1, i32* %5
  br label %basicBlock47

basicBlock47:
  br label %basicBlock44

basicBlock48:
  %116 = load i32, i32* %5
  %117 = icmp ne i32 %116, 0
  br i1 %117, label %basicBlock49, label %basicBlock53

basicBlock49:
  %118 = load i32, i32* %5
  %119 = icmp ne i32 %118, 0
  br i1 %119, label %basicBlock50, label %basicBlock53

basicBlock50:
  br label %basicBlock51

basicBlock51:
  br label %basicBlock52

basicBlock52:
  br label %basicBlock53

basicBlock53:
  %120 = load i32, i32* %5
  %121 = icmp ne i32 %120, 1
  br i1 %121, label %basicBlock54, label %basicBlock58

basicBlock54:
  %122 = load i32, i32* %5
  %123 = icmp ne i32 %122, 0
  br i1 %123, label %basicBlock55, label %basicBlock58

basicBlock55:
  br label %basicBlock56

basicBlock56:
  br label %basicBlock57

basicBlock57:
  br label %basicBlock58

basicBlock58:
  %124 = load i32, i32* %5
  %125 = icmp ne i32 %124, 1
  br i1 %125, label %basicBlock59, label %basicBlock63

basicBlock59:
  %126 = load i32, i32* %5
  %127 = load i32, i32* %5
  %128 = icmp eq i32 %126, %127
  br i1 %128, label %basicBlock60, label %basicBlock63

basicBlock60:
  br label %basicBlock61

basicBlock61:
  br label %basicBlock62

basicBlock62:
  br label %basicBlock63

basicBlock63:
  %129 = load i32, i32* %5
  %130 = icmp ne i32 %129, 1
  br i1 %130, label %basicBlock65, label %basicBlock64

basicBlock64:
  %131 = load i32, i32* %5
  %132 = icmp eq i32 %131, 1
  br i1 %132, label %basicBlock65, label %basicBlock68

basicBlock65:
  br label %basicBlock66

basicBlock66:
  br label %basicBlock67

basicBlock67:
  br label %basicBlock68

basicBlock68:
  %133 = load i32, i32* %5
  %134 = icmp eq i32 %133, 1
  br i1 %134, label %basicBlock71, label %basicBlock69

basicBlock69:
  %135 = load i32, i32* %5
  %136 = icmp ne i32 %135, 1
  br i1 %136, label %basicBlock70, label %basicBlock74

basicBlock70:
  %137 = load i32, i32* %5
  %138 = icmp ne i32 %137, 2
  br i1 %138, label %basicBlock71, label %basicBlock74

basicBlock71:
  br label %basicBlock72

basicBlock72:
  br label %basicBlock73

basicBlock73:
  br label %basicBlock74

basicBlock74:
  %139 = call i32 @getint()
  store i32 %139, i32* %4
  %140 = load i32, i32* %4
  %141 = call i32 (i8*, ...) @printf(i8* getelementptr([18 x i8], [18 x i8]* @void707479143void, i32 0, i32 0), i32 %140)
  ret i32 0
}

